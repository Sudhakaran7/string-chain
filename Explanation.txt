We are given with set of strings with lowercase alphabets,
Let's say word1 is a predecessor of word2 if and only if we can add exactly one letter anywhere in word1 to make it equal to word2.  For example, "abc" is a predecessor of "abac".
A word chain is a sequence of words [word_1, word_2, ..., word_k] with k >= 1, where word_1 is a predecessor of word_2, word_2 is a predecessor of word_3, and so on.
Return the longest possible length of a word chain with words chosen from the given list of words.

Input Description:
First line contains n size. (1<n<1000)
Second line contains n elemnts of strings in a array.

Output Description:
Print the longest possible length of a word chain with words chosen from the given list of words

Sample Input:
5
we are twe you weth

Sample Output:
2

Explanation:
The predecessor words which forms longest string chain is, 'we' and 'twe'.
so output is 2.

Sample Input:
6
god godi dog dg godiu gggf

Sample Output:
3

Sample Input:
8
int you yout yes youh youhs set youhsz

Sample Output:
4

Sample Input:
4
qw qwe qwer ty

Sample Output:
3

Sample Input:
9
a b ab ac acd abd acde acdef d

Sample Output:
5

Sample Input:
3
a b c

Sample Output:
1
